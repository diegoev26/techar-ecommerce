require("dotenv").config({ path: require("find-config")(".env") });

const {
  ENV,
  PORT,
  DB_USER_HAFELE,
  DB_USER_INTERFACES,
  DB_USER_PAH,
  DB_USER_HARQV,
  DB_PASSWORD_HAFELE,
  DB_PASSWORD_INTERFACES,
  DB_PASSWORD_PAH,
  DB_PASSWORD_HARQV,
  DB_SERVER_HAFELE,
  DB_SERVER_INTERFACES,
  DB_SERVER_PAH,
  DB_SERVER_HARQV,
  DB_NAME_HAFELE,
  DB_NAME_INTERFACES,
  DB_NAME_PAH,
  DB_NAME_DEV_PAH,
  DB_NAME_HARQV,
  DB_URI,
  MAILER_USER,
  MAILER_PASSWORD,
  MAILER_PORT,
  MAILER_SERVER,
  API_URL,
  ROUTES_MAIN_PENDING_MESSAGE,
  ROUTES_MAIN_PARAMS,
  ROUTES_MAIN_SQL,
  ROUTES_MAIN_MAILING,
  ROUTES_CARRIERS_DELIVERY_NOTES,
  ROUTES_CARRIERS_NEW_ORDER,
  ROUTES_CARRIERS_TRACKING,
  ROUTES_CARRIERS_SLA,
  ROUTES_CARRIERS_UPDATE_DN,
  ROUTES_CARRIERS_TRANSLOG_STOCK,
  ROUTES_SILHAR_DELIVERY_NOTES,
  ROUTES_SILHAR_PRINT_DN,
  ROUTES_SILHAR_UPDATE_PRINTED,
  ROUTES_SILHAR_PRINT_AGAIN,
  ROUTES_SILHAR_REPROCESS,
  ROUTES_PAH_UPDATE,
  ROUTES_PAH_RETRIEVE,
  ROUTES_ECOMM_DATA,
  ROUTES_ECOMM_CHART_DATA,
  ROUTES_ECOMM_STATUS,
  ROUTES_ECOMM_TAX,
  ROUTES_ECOMM_GET_PERCEPTS,
  ROUTES_ECOMM_SET_PERCEPTS,
  ROUTES_ECOMM_PAY_PERCEPTS,
  ROUTES_ECOMM_CONFIRM_DATA,
  ROUTES_ECOMM_CONFIRM,
  ROUTES_ECOMM_STEP,
  ROUTES_ECOMM_CONTACT_DATA,
  ROUTES_ECOMM_ADD_CONTACT_DATA,
  ROUTES_ECOMM_DELETE_CONTACT_DATA,
  ROUTES_ECOMM_DELETE_SWITCH,
  ROUTES_ECOMM_COMMENT_ADD,
  ROUTES_ECOMM_COMMENT_GET,
} = process.env;

export default {
  urlPAH: {
    url_baseProdu: { link: "http://www.portalhafele.com.ar/service/sync/" },
    url_basePrepro: {
      link: "http://Hafele-prepro.bitflowapps.com/service/sync/",
    },
    url_baseQA: {
      link: "http://Hafele-prepro.bitflowapps.com/service/sync/",
    },
    url_actualizarpedidos: {
      link: "actualizarpedidos",
      keyUpdate: "pedidos",
      tableName: "pedidos",
      pk1Table: "idPedido",
    },
    url_pedidos: { link: "pedidos" },
    url_familias: {
      link: "familias",
      keyUpdate: "familias",
      tableName: "familia",
      pk1Table: "codigo",
    },
    url_combos: {
      link: "combobonificacion",
      keyUpdate: "combos",
      tableName: "familiaComboBonificacion",
      pk1Table: "codigoFamilia",
      pk2Table: "codigoCombo",
    },
    url_productos: {
      link: "productos",
      keyUpdate: "productos",
      tableName: "productos",
      pk1Table: "codigo",
    },
    url_clientes: {
      link: "clientes",
      keyUpdate: "clientes",
      tableName: "clientes",
      pk1Table: "codigo",
    },
    url_precios_delete: "borrarprecio",
    url_precios: {
      link: "precios",
      keyUpdate: "precios",
      tableName: "precio",
      pk1Table: "lista",
      pk2Table: "producto",
      pk3Table: "fechaDesde",
    },
    url_stocks: {
      link: "stocks",
      keyUpdate: "productos",
      tableName: "stock",
      pk1Table: "codigoProducto",
    },
    url_bonificacionGrupo: {
      link: "bonificaciongrupo",
      keyUpdate: "grupos",
      tableName: "bonificacionGrupo",
      pk1Table: "codigoBG",
    },
    url_bonificacionClientes: {
      link: "bonificacioncliente",
      keyUpdate: "bonificaciones",
      tableName: "bonificacionesClientes",
      pk1Table: "cliente",
      pk2Table: "producto",
    },
    url_listas: {
      link: "listas",
      keyUpdate: "listas",
      tableName: "listasDePrecios",
      pk1Table: "codigoLista",
    },
    url_ultimasCompras: { link: "ultimascompras", keyUpdate: "compras" },
    url_items: {
      link: "items",
      keyUpdate: "items",
      tableName: "items",
      pk1Table: "idPedido",
      pk2Table: "idItem",
    },
    url_vendedoresclientes: {
      link: "vendedoresclientes",
      keyUpdate: "vendedores",
    },
    url_vendedores: {
      link: "vendedores",
      keyUpdate: "vendedores",
      tableName: "vendedores",
      pk1Table: "codigoVendedor",
    },
    url_facturas: "facturas",
    url_lugares: {
      link: "lugarentrega",
      keyUpdate: "lugares",
      tableName: "lugarEntrega",
      pk1Table: "codigo",
      pk2Table: "cliente",
    },
    url_transportistas: {
      link: "transportistas",
      keyUpdate: "transportistas",
      tableName: "transportistas",
      pk1Table: "codigo",
    },
    url_zonas: {
      link: "zonas",
      keyUpdate: "zonas",
      tableName: "Zona",
      pk1Table: "codigo",
    },
    url_newpedidos: "newpedido",
    url_itemsPendientes: { link: "itemspendientes", keyUpdate: "items" },
    url_enviadotorecibido: { link: "enviadotorecibido", keyUpdate: "" },

    url_condicion_pago: {
      link: "condicionpago",
      keyUpdate: "condicionesDePago",
      tableName: "condicionDePago",
      pk1Table: "codigo",
    },
  },
  PahPaths: { LogErrorsOrders: "C:\\PAH\\logs\\Orders\\" },
  translogApi: {
    client: "0000010145",
    user: "HAFELE",
    pass: "HAFELE_2021",
    company: "HFL",
    route: "http://169.62.245.23/Translog.Pedidos.API/api/v1",
    auth: "/Auth/login",
    newOrder: "/PedidosSaadis/Alta",
    deleteOrder: "/PedidosSaadis/Eliminar",
    checkStock: "/Pedidos/ConsultaStock",
    checkStatus: "/Pedidos/ConsultaComprobantes",
  },
  login: {
    ftp: {
      host: "168.194.216.26",
      port: 65021,
      user: "HAFELE",
      password: "*JZF-RXBRL-d",
    },
    api: {
      key: "$2y$10$towFL46pUSr51tthgr9zPBs.hYjmw6YrEwqes3MiNdpnHel2s",
      companyId: 506,
      route: "https://web.log-in.com.ar/loginws/v1",
      tracking: "/seguimientoguia",
    },
  },
  port: parseInt(PORT) || 4000,
  env: ENV === "dev" ? false : true,
  dbOptions: {
    users: {
      hafele: DB_USER_HAFELE,
      interfaces: DB_USER_INTERFACES,
      pah: DB_USER_PAH,
      har_qv: DB_USER_HARQV,
    },
    passwords: {
      hafele: DB_PASSWORD_HAFELE,
      interfaces: DB_PASSWORD_INTERFACES,
      pah: DB_PASSWORD_PAH,
      har_qv: DB_PASSWORD_HARQV,
    },
    servers: {
      hafele: DB_SERVER_HAFELE,
      interfaces: DB_SERVER_INTERFACES,
      pah: DB_SERVER_PAH,
      har_qv: DB_SERVER_HARQV,
    },
    names: {
      hafele: DB_NAME_HAFELE,
      interfaces: DB_NAME_INTERFACES,
      pah: DB_NAME_PAH,
      devPah: DB_NAME_DEV_PAH,
      har_qv: DB_NAME_HARQV,
    },
    uri: DB_URI,
  },
  mailer: {
    user: MAILER_USER,
    pass: MAILER_PASSWORD,
    port: MAILER_PORT,
    server: MAILER_SERVER,
  },
  urlApiInterface: API_URL,
  routes: {
    main: {
      pendingMessage: ROUTES_MAIN_PENDING_MESSAGE,
      params: ROUTES_MAIN_PARAMS,
      sql: ROUTES_MAIN_SQL,
      mailing: ROUTES_MAIN_MAILING,
    },
    carriers: {
      deliveryNotes: ROUTES_CARRIERS_DELIVERY_NOTES,
      newOrder: ROUTES_CARRIERS_NEW_ORDER,
      tracking: ROUTES_CARRIERS_TRACKING,
      sla: ROUTES_CARRIERS_SLA,
      updateDeliveryNote: ROUTES_CARRIERS_UPDATE_DN,
      translogStock: ROUTES_CARRIERS_TRANSLOG_STOCK,
    },
    silhar: {
      deliveryNotes: ROUTES_SILHAR_DELIVERY_NOTES,
      printDeliveryNote: ROUTES_SILHAR_PRINT_DN,
      updatePrinted: ROUTES_SILHAR_UPDATE_PRINTED,
      printAgain: ROUTES_SILHAR_PRINT_AGAIN,
      reprocess: ROUTES_SILHAR_REPROCESS,
    },
    pah: {
      update: ROUTES_PAH_UPDATE,
      retrieve: ROUTES_PAH_RETRIEVE,
    },
    ecommerce: {
      data: ROUTES_ECOMM_DATA,
      chartData: ROUTES_ECOMM_CHART_DATA,
      status: ROUTES_ECOMM_STATUS,
      tax: ROUTES_ECOMM_TAX,
      perceptsGet: ROUTES_ECOMM_GET_PERCEPTS,
      perceptsSet: ROUTES_ECOMM_SET_PERCEPTS,
      perceptsPay: ROUTES_ECOMM_PAY_PERCEPTS,
      confirmData: ROUTES_ECOMM_CONFIRM_DATA,
      confirm: ROUTES_ECOMM_CONFIRM,
      step: ROUTES_ECOMM_STEP,
      contactData: ROUTES_ECOMM_CONTACT_DATA,
      contactDataAdd: ROUTES_ECOMM_ADD_CONTACT_DATA,
      contactDataDelete: ROUTES_ECOMM_DELETE_CONTACT_DATA,
      deleteSwitch: ROUTES_ECOMM_DELETE_SWITCH,
      commentAdd: ROUTES_ECOMM_COMMENT_ADD,
      commentGet: ROUTES_ECOMM_COMMENT_GET,
    },
  },
};
